@model WBT.DLCustomerCreation.IncompletePromotion
@using WBT.Common

<div class="col-lg-12 grid-margin stretch-card">
        <div class="card card-primary">
            <div class="card-header">
                <h3 class="card-title">Customer List </h3>
                <div class="card-tools">
                    <button type="button" class="btn btn-tool" data-card-widget="collapse">
                        <i class="fas fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-tool" data-card-widget="remove">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
            </div>
            <div class="card-body">
                
                <div class="text-md-right"> </div>
                @using (Ajax.BeginForm("Promotion", "AppUsers", null, new AjaxOptions
                {
                    OnSuccess = "onPromoSuccess_Ajax",
                    HttpMethod = "post",
                    LoadingElementId = "promoprogress"
                }, new { @class = "form-sample", @id = "frm-promote", @enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="pt-3 table-responsive">
                        <table class="table table-bordered dataGrid" id="dataGrid">
                            <thead>
                                <tr>
                                    <th style="width:100%!important">
                                        Firm Name
                                    </th>
                                    <th>
                                        Owner Name
                                    </th>
                                    <th>
                                        Mobile Number
                                    </th>
                                    <th>
                                        Tally City Name
                                    </th>
                                    <th>
                                        Tally State Name
                                    </th>
                                    @{
                                        if (Model.RoleName == "Administrator" || Model.RoleName == "Admin")
                                        {
                                            <th class="notexport">
                                                Action
                                            </th>
                                            <th class="notexport text-center">@Html.CheckBox("CheckAll", false, new { id = "select_all" })</th>
                                        }
                                    }
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model != null)
                                {
                                    if (Model.RoleName == "Administrator" || Model.RoleName == "Admin")
                                    {
                                        int j = 0;
                                        if (Model.customerList.Count() > 0)
                                        {
                                            foreach (var item in Model.customerList)
                                            {
                                                <tr>
                                                    <td style="width:100%!important">
                                                        @Html.TextBoxFor(a => a.customerList[j].FirmName, new { @style = "border:none; width:100%!important" })
                                                        @Html.HiddenFor(a => item.CustID)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(a => a.customerList[j].Name, new { @style = "border:none" })
                                                    </td>
                                                    <td>
                                                        @Html.TextBoxFor(a => a.customerList[j].MobileNumber, new { @style = "border:none" })
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(a => a.customerList[j].CityName, new { @style = "border:none" })
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(a => a.customerList[j].StateName, new { @style = "border:none" })
                                                    </td>
                                                    <td class="noExport">
                                                        @Html.ActionLink(linkText: "Edit", actionName: "Index", controllerName: "EditAppUser", routeValues: new
                                                        {
                                                            route = Helper.Encrypt(item.CustID.ToString(), "sblw-3hn8-sqoy19")
                                                        },
                                                        htmlAttributes: new { @class = "btn btn-success btn-xs" })
                                                    </td>
                                                    <td class="noExport text-center">
                                                        @Html.CheckBoxFor(a => a.customerList[j].IsChecked, new { @class = "chkselect" })
                                                    </td>
                                                </tr>
                                                j++;
                                            }
                                        }
                                    }
                                    else
                                    {
                                        int j = 0;
                                        if (Model.customerList.Count() > 0)
                                        {
                                            foreach (var item in Model.customerList)
                                            {
                                                <tr>
                                                    <td style="width:70%!important">
                                                        @Html.TextBoxFor(a => a.customerList[j].FirmName, new { @style = "border:none; width:100%" })
                                                        @Html.HiddenFor(a => item.CustID)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(a => a.customerList[j].Name, new { @style = "border:none" })
                                                    </td>
                                                    <td>
                                                        @Html.TextBoxFor(a => a.customerList[j].MobileNumber, new { @style = "border:none" })
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(a => a.customerList[j].CityName, new { @style = "border:none" })
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(a => a.customerList[j].StateName, new { @style = "border:none" })
                                                    </td>
                                                </tr>
                                                j++;
                                            }
                                        }
                                    }

                                }
                            </tbody>
                        </table>
                    </div>

                    <div id="promotionRow">
                        <h4 class="card-title">Promote</h4>
                        <p class="card-description">

                        </p>
                        <div class="row">
                            <div class="col-md-4">

                            </div>
                            <div class="col-md-2">
                                <div class="form-group">
                                    <div class="form-check">
                                        @Html.CheckBoxFor(m => m.IsEmail) Email
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-group">
                                    <div class="form-check">
                                        @Html.CheckBoxFor(m => m.IsSMS) SMS
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-group">
                                    <div class="form-check">
                                        @Html.CheckBoxFor(m => m.IsWhatsApp) Whatsapp
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-2">

                            </div>
                        </div>
                        <div id="SMSRow" style="display:none;">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <label>SMS Body</label>
                                        @Html.TextAreaFor(model => model.SMSBody, new { @class = "form-control input-lg", @required = "required", @maxlength = "160" })
                                        @Html.ValidationMessageFor(model => model.SMSBody, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                        </div>
                        <div id="EmailRow" style="display:none;">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Mail Subject</label>
                                        @Html.TextBoxFor(model => model.MailSubject, new { @class = "form-control", @required = "required" })
                                        @Html.ValidationMessageFor(model => model.MailSubject, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Attachments</label>
                                        <input type="file" id="postedFile" name="postedFile" class="form-control" />
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <label>Your Message</label>
                                        @Html.TextAreaFor(model => model.MailBody, new { @class = "form-control input-lg textarea-editor", @required = "required" })
                                        @Html.ValidationMessageFor(model => model.MailBody, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="clearfix"></div>
                        <div class="card-footer">
                            <div class="text-center">
                                @{
                                    if (Session["UserID"].ToString() == "1")
                                    {
                                        <button type="submit" class="btn btn-primary" onclick="return onPromoteClick();">Promote</button>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

<div id="promoprogress" class="modal">
    <div class="center" style="margin: 0px; padding: 0px; position: fixed; right: 0px; top: 0px; width: 100%; height: 100%; background-color: rgb(102, 102, 102); z-index: 30001; opacity: 0.8;">
        <p style="position: absolute; color: White; top: 50%; left: 45%;">
            <span>Loading, Please Wait...</span> <img src="~/images/loading.gif" height="100" width="100" />
        </p>
    </div>
</div>

@section scripts {
    <script>
    function onPromoSuccess_Ajax(result) {
        if (result == "sessionexpired") {
            Swal.fire({
                text: "Your Session Expired!! Please login again",
            }).then(function () {
                window.location = '@Url.Action("Index", "Login")';
            });
        }
        else {
            Swal.fire({
                text: result,
            }).then(function () {
                window.location = '@Url.Action("Index", "AppUsers")';
            });
        }
    }
    </script>
    @*<script>
    
        $("#IsEmail").click(function () {
            if (this.checked) {
                $("#IsSMS").prop('checked', false);
                $("#IsWhatsApp").prop('checked', false);
                jQuery("#SMSRow").hide();
                $("#EmailRow").show();
                $('.textarea-editor').summernote({
                    height: 100, // set editor height
                    minHeight: null, // set minimum height of editor
                    maxHeight: null, // set maximum height of editor
                    focus: false // set focus to editable area after initializing summernote
                });
            }
            else {
                $("#EmailRow").hide();
            }
        });

    $("#IsSMS").click(function () {

        //alert('is sms clicked');

            if (this.checked) {
                $("#IsEmail").prop('checked', false);
                $("#IsWhatsApp").prop('checked', false);
                jQuery("#SMSRow").show();
                $("#EmailRow").hide();
            }
            else {
                $("#SMSRow").hide();
            }
        });
        $("#IsWhatsApp").click(function () {
            if (this.checked) {
                $("#IsEmail").prop('checked', false);
                $("#IsSMS").prop('checked', false);
            }
        });
    </script>*@

    <script>
        $.validator.unobtrusive.parse(document);
    </script>
    <script>
        $("#frm-example1").validate();
    </script>
}