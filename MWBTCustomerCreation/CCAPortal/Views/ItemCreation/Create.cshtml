@model  WBT.DLCustomerCreation.DLItemCreation

@using (Ajax.BeginForm("Save", "ItemCreation", null, new AjaxOptions
{
    UpdateTargetId = "divList",
    //OnBegin = "onBegin_Ajax",
    //OnComplete = "onSaveCompleteCreate_Ajax",
    OnSuccess = "onCreateSuccess_Ajax",
    //OnFailure = "onFailure_Ajax",
    HttpMethod = "post",
    LoadingElementId = "progress"

}, new { @class = "form-sample" }))
{
    @Html.AntiForgeryToken()
    

    <!-- Main content -->
    <div class="row">
        <!-- left column -->
        <div class="col-md-12">
            <!-- general form elements -->
            <div class="card card-primary">
                <div class="card-header">
                    <h3 class="card-title">Item Creation</h3>
                    <div class="card-tools">
                        <button type="button" class="btn btn-tool" data-card-widget="collapse">
                            <i class="fas fa-minus"></i>
                        </button>
                        <button type="button" class="btn btn-tool" data-card-widget="remove">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                </div>
                <!-- /.card-header -->
                <!-- form start -->

                <div class="card-body">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Item Name </label>
                                <div class="input-group">
                                    @Html.EditorFor(model => model.ItemName, new { htmlAttributes = new { @class = "form-control", @required = "Required", @autocomplete = "off" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.ItemName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label> &nbsp; </label>
                                <div class="input-group">
                                    @Html.EditorFor(model => model.ItemNameWithUnit, new { htmlAttributes = new { @class = "form-control ", @autocomplete = "off", @readonly = true } })

                                </div>
                                @*@Html.ValidationMessageFor(model => model.ItemNameWithUnit, "", new { @class = "text-danger" })*@
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Item Code </label>
                                <div class="input-group">
                                    @Html.EditorFor(model => model.ItemCode, new { htmlAttributes = new { @class = "form-control ", @required = "Required", @autocomplete = "off", @Readonly = true } })

                                </div>
                                @Html.ValidationMessageFor(model => model.ItemCode, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group ">
                                <label> Item Alias </label>
                                <div class="input-group">
                                    @Html.EditorFor(model => model.ItemAlias, new { htmlAttributes = new { @class = "form-control ", @required = "Required", @autocomplete = "off", @MaxLength = "5" } })

                                </div>
                                @Html.ValidationMessageFor(model => model.ItemAlias, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Select Group </label>
                                <div class="input-group">
                                    @Html.DropDownListFor(model => model.CategoryID, (SelectList)ViewBag.GroupList, "Select Group", new { @class = "form-control listbox", @placeholder = "Select Group", @required = "required", @onchange = "FillSubCategory()" })
                                </div>
                                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group ">
                                <label>Select Category </label>
                                <div class="input-group">
                                    <select id="SubCategoryID" name="SubCategoryID" class="form-control listbox" required="required">
                                        <option value='0'>- Search Category -</option>
                                    </select>
                                </div>
                                @Html.ValidationMessageFor(model => model.SubCategoryID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Select Company </label>
                                <div class="input-group">
                                    @Html.DropDownListFor(model => model.ItemCompanyID, (SelectList)ViewBag.CompanyList, "Select Company", new { @class = "form-control listbox", @placeholder = "Select Company", @required = "required" })
                                </div>
                                @Html.ValidationMessageFor(model => model.ItemCompanyID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group ">
                                <label> Select Brand </label>
                                <div class="input-group">
                                    @Html.DropDownListFor(model => model.BrandID, (SelectList)ViewBag.BrandList, "Select Brand", new { @class = "form-control listbox", @placeholder = "Select Brand", @required = "required" })
                                </div>
                                @Html.ValidationMessageFor(model => model.BrandID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>HSN Code </label>
                                <div class="input-group">
                                    @Html.EditorFor(model => model.HSNCode, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.HSNCode, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group ">
                                <label>HSN Subcode </label>
                                <div class="input-group">
                                    @Html.EditorFor(model => model.HSNSubCode, new { htmlAttributes = new { @class = "form-control ", @required = "Required", @autocomplete = "off" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.HSNSubCode, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Basic Unit </label>
                                <div class="input-group">
                                    @Html.DropDownListFor(model => model.BaseUnit, (SelectList)ViewBag.uomList, "Select Basic Unit", new { @class = "form-control listbox", @placeholder = "Select Basic Unit", @required = "required", @onchange = "AltChange(this.value);" })
                                </div>
                                @Html.ValidationMessageFor(model => model.BaseUnit, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group ">
                                <label>Alternate Unit &nbsp;&nbsp;   <a href="#" class="navbar-btn sidebar-toggle" data-toggle="offcanvas" title="Example 1 : (Packet Size) - 1000 (Packet Unit) - Gms = (Bag Size) - 1 (Bag Unit) Kg. i.e, 1000Gms as 1Kg.  Example 2 : (Packet Size) - 10 (Packet Unit) - Pcs = Bag Size - 1 (Bag Unit) Box. i.e, 10Pcs as 1Box."><i class="fas fa-question-circle"></i></a> </label>
                                <div class="input-group">
                                    @Html.DropDownListFor(model => model.AlternateUnit, (SelectList)ViewBag.uomList, "Select Alternate Unit", new { @class = "form-control listbox", @placeholder = "Select Alternate Unit",  @onchange = "AltChange(this.value);" })
                                </div>
                                @*@Html.ValidationMessageFor(model => model.AlternateUnit, "", new { @class = "text-danger" })*@
                            </div>
                        </div>
                    </div>

                    <div class="row" style="background-color:lightgray;">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Packet Size </label>
                                <div class="input-group">
                                    @Html.EditorFor(model => model.PacketQTY, new { htmlAttributes = new { @class = "form-control numberonly", @autocomplete = "off", @formnovalidate="formnovalidate" } })  &nbsp;&nbsp;
                                    @Html.DropDownListFor(model => model.PacketUOMID, (SelectList)ViewBag.uomList, "Select Unit", new { @class = "form-control listbox", @placeholder = "Select Unit", @onchange = "BagUnitChanged();" })
                                </div>
                                @*@Html.ValidationMessageFor(model => model.PacketQTY, "", new { @class = "text-danger" })
                                    @Html.ValidationMessageFor(model => model.PacketUOMID, "", new { @class = "text-danger" })*@
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group ">
                                <label> Bag Size </label>
                                <div class="input-group">
                                    @Html.EditorFor(model => model.BagQTY, new { htmlAttributes = new { @class = "form-control numberonly", @autocomplete = "off", @formnovalidate="formnovalidate" } })
                                    &nbsp;&nbsp;
                                    @Html.DropDownListFor(model => model.BagUOMID, (SelectList)ViewBag.uomList, "Select Unit", new { @class = "form-control listbox", @placeholder = "Select Unit", @onchange = "BagUnitChanged();" })
                                </div>
                                @*@Html.ValidationMessageFor(model => model.BagQTY, "", new { @class = "text-danger" })
                                    @Html.ValidationMessageFor(model => model.BagUOMID, "", new { @class = "text-danger" })*@
                            </div>
                        </div>
                    </div>
                    <div class="row" id="WhareDiv" style="display:none;">
                        <div class="col-md-3">
                            <div class="form-group">
                                <label>Where </label>
                                <div class="input-group">
                                    @Html.EditorFor(model => model.BasePKTValue, new { htmlAttributes = new { @class = "form-control numberonly", @required = "Required", @autocomplete = "off", @Value = "1" } })
                                </div>
                                @*@Html.ValidationMessageFor(model => model.ItemCode, "", new { @class = "text-danger" })*@
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group ">
                                <label> &nbsp; </label>
                                <div class="input-group">
                                    @Html.EditorFor(model => model.BaseUnitName, new { htmlAttributes = new { @class = "form-control ", @required = "Required", @autocomplete = "off", @readonly = true } })
                                </div>
                                @*@Html.ValidationMessageFor(model => model.BaseUnitName, "", new { @class = "text-danger" })*@
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label> &nbsp; </label>
                                <div class="input-group">
                                    @Html.EditorFor(model => model.AlternatePKTValue, new { htmlAttributes = new { @class = "form-control numberonly", @autocomplete = "off" } })
                                </div>
                                @*@Html.ValidationMessageFor(model => model.AlternatePKTValue, "", new { @class = "text-danger" })*@
                            </div>
                        </div>

                        <div class="col-md-3">
                            <div class="form-group ">
                                <label> &nbsp; </label>
                                <div class="input-group">
                                    @Html.EditorFor(model => model.AlternateUnitName, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @readonly = true } })

                                </div>
                                @*@Html.ValidationMessageFor(model => model.AlternateUnitName, "", new { @class = "text-danger" })*@
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group ">
                                <label> GST % </label>
                                <div class="input-group">
                                    @Html.EditorFor(model => model.GST, new { htmlAttributes = new { @class = "form-control numberonly", @required = "Required", @autocomplete = "off" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.GST, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group ">
                                <label> GST Effective Date </label>
                                <div class="input-group">
                                    @Html.EditorFor(model => model.GSTEffectiveDate, new { htmlAttributes = new { @class = "form-control dated", @required = "Required", @autocomplete = "off" } })

                                </div>
                                @Html.ValidationMessageFor(model => model.GSTEffectiveDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Item Base Rate </label>
                                <div class="input-group">
                                    @Html.EditorFor(model => model.BaseRateOther, new { htmlAttributes = new { @class = "form-control numberonly", @required = "Required", @autocomplete = "off" } })

                                </div>
                                @Html.ValidationMessageFor(model => model.BaseRateOther, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <!-- /.card-body -->

                    <div class="card-footer">
                        <div class="text-center">
                            <button type="submit" class="btn btn-primary">Save</button>
                        </div>
                    </div>

                </div>
            </div>
            <!-- /.card -->
        </div>
    </div>
}
@section scripts {
    <script>
        $.validator.unobtrusive.parse(document);
    </script>

}
