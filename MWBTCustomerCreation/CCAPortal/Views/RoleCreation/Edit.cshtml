@model WBT.DLCustomerCreation.DLRoleCreation

@using (Ajax.BeginForm("Update", "RoleCreation", null, new AjaxOptions
{
    UpdateTargetId = "divList",
    OnBegin = "onBegin_Ajax",
    OnComplete = "onEditCompleteCreate_Ajax",
    OnSuccess = "onEditSuccess_Ajax",
    OnFailure = "onFailure_Ajax",
    HttpMethod = "post",
    LoadingElementId = "progress"
}, new { @class = "form-sample" }))
{
    @Html.AntiForgeryToken()

    <div>
        <div class="card card-primary">
            <div class="card-header">
                <h3 class="card-title"> Role  Creation </h3>
                <div class="card-tools">
                    <button type="button" class="btn btn-tool" data-card-widget="collapse"><i class="fas fa-minus"></i></button>
                    <button type="button" class="btn btn-tool" data-card-widget="remove"><i class="fas fa-times"></i></button>
                </div>
            </div>
            <!-- /.card-header -->
            <div class="card-body">
                <div id="maindiv">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Department </label>
                                @Html.HiddenFor(model => model.RoleID)
                                <div class="input-group">
                                    @Html.DropDownListFor(model => model.DepartmentID, (SelectList)ViewBag.DeptList, "Select Department", new { @class = "form-control listbox", @onchange = "LoadDeptRoles()" })
                                </div>
                                @Html.ValidationMessageFor(model => model.DepartmentID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Role Name </label>
                                <div class="input-group">
                                    @Html.EditorFor(model => model.RoleName, new { htmlAttributes = new { @class = "form-control ", @required = "Required", @placeholder = "Role Name", @maxlength = "50", @autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.RoleName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Parent RoleName </label>
                                <div class="input-group">
                                    @Html.DropDownListFor(model => model.ParentRoleID, (SelectList)ViewBag.RolesList, "Parent Role", new {@class = "form-control listbox" })
                                </div>
                                @Html.ValidationMessageFor(model => model.ParentRoleID, "", new { @class = "text-danger validation_Msg" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Role Description  </label>
                                <div class="input-group">
                                    @Html.EditorFor(model => model.RoleDescription, new { htmlAttributes = new { @class = "form-control", @required = "Required", @placeholder = "Role Description", @maxlength = "128", @autocomplete = "off" } })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="clearfix"></div>
                <div class="text-center">
                    <button type="submit" class="btn btn-primary ">Update</button>
                    <a href="javascript:void(0)" class="btn btn-danger" onclick="btnCancel_Click()">Cancel</a>
                </div>
            </div>
        </div>
    </div>
}

@section scripts{
    <script>
        $.validator.unobtrusive.parse(document);
    </script>
}