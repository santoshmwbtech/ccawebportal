@model WBT.DLCustomerCreation.DLUserCreation
@using (Ajax.BeginForm("Save", "UserCreation", null, new AjaxOptions
{
    UpdateTargetId = "divList",
    OnBegin = "onBegin_Ajax",
    OnComplete = "onSaveCompleteCreate_Ajax",
    OnSuccess = "onCreateSuccess_Ajax",
    OnFailure = "onFailure_Ajax",
    HttpMethod = "post",
    LoadingElementId = "progress"
}, new { @class = "form-sample", @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <section>
        <div>
            <div class="card card-primary">
                <div class="card-header">
                    <h3 class="card-title"> User Creation </h3>
                    <div class="card-tools">
                        <button type="button" class="btn btn-tool" data-card-widget="collapse">
                            <i class="fas fa-minus"></i>
                        </button>
                        <button type="button" class="btn btn-tool" data-card-widget="remove">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                </div>
                <!-- /.card-header -->
                <div class="card-body">

                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Name of the User</label>
                                @Html.TextBoxFor(model => model.FName, new { @class = "form-control", @maxlength = "50", @placeholder = "Name of the User", @required = "required", @autocomplete = "off" })
                                @Html.ValidationMessageFor(model => model.FName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Department</label>
                                <div class="input-group">
                                    @Html.DropDownListFor(model => model.DepartmentID, (SelectList)ViewBag.DeptList, "Select Department", new { @class = "form-control listbox", @onchange = "LoadDeptRoles()" })
                                </div>
                                @Html.ValidationMessageFor(model => model.DepartmentID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Role</label>
                                <div class="input-group">
                                    @Html.DropDownListFor(model => model.RoleID, (SelectList)ViewBag.RolesList, "Select Role", new { @required = "Required", @class = "form-control listbox", @autocomplete = "off", onchange = "RoleChanged()" })
                                </div>
                                @Html.ValidationMessageFor(model => model.RoleID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Branch</label>
                                <div class="input-group">
                                    @Html.DropDownListFor(model => model.BranchID, (SelectList)ViewBag.BranchList, "Select Branch", new { @required = "Required", @class = "form-control listbox", @autocomplete = "off" })
                                </div>
                                @Html.ValidationMessageFor(model => model.BranchID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Country</label>
                                <div class="input-group">
                                    @Html.DropDownListFor(model => model.CountryID, (SelectList)ViewBag.CountryList, new { @class = "form-control listbox", @required = "required" })
                                </div>
                                @Html.ValidationMessageFor(model => model.CountryID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>State</label>
                                <div class="input-group">
                                    @Html.DropDownListFor(model => model.State, (SelectList)ViewBag.StateList, "Select State", new { @required = "Required", @class = "form-control listbox", @autocomplete = "off", onchange = "OnChangeEventState()" })
                                </div>
                                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>City</label>
                                <div class="input-group">
                                    <select id="City" name="City" class="form-control">
                                        <option value='0'>- Search City -</option>
                                    </select>
                                    @*@Html.DropDownListFor(model => model.City, Enumerable.Empty<SelectListItem>(), "Select City", new { @required = "Required", @class = "form-control listbox", @autocomplete = "off" })*@
                                    @*@Html.TextBoxFor(model => model.City, new { @class = "form-control ", @placeholder = "City Name", @required = "required", @autocomplete = "off" })*@
                                </div>
                                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Parent Role Name</label>
                                <div class="input-group">
                                    @Html.ListBoxFor(model => model.ParentUserList, (SelectList)ViewBag.ParentUsers, new { @class = "form-control listbox", @autocomplete = "off", @multiple = "multiple" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Warehouse</label>
                                <div class="input-group">
                                    @Html.DropDownListFor(model => model.WarehouseID, (SelectList)ViewBag.WareHouseList, "Select Warehouse", new { @class = "form-control listbox", @autocomplete = "off" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Alias Name</label>
                                @Html.TextBoxFor(model => model.Alias, new { @class = "form-control ", @placeholder = "Alias Name", @maxlength = "3", @required = "required", @autocomplete = "off" })
                                @Html.ValidationMessageFor(model => model.Alias, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Mobile Number</label>
                                @Html.TextBoxFor(model => model.Mobile, new { @class = "form-control", @placeholder = "MobileNumber", @required = "required", @onkeypress = "return isNumber(event);", @autocomplete = "off", @maxlength = "10", @onchange = "return checkDupMobileNo(this)" })
                                @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Email</label>
                                @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @placeholder = "Email", @required = "required", @autocomplete = "off", @maxlength = "100" })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Address</label>
                                @Html.TextBoxFor(model => model.Address, new { @class = "form-control ", @placeholder = "Address", @maxlength = "250", @required = "required", @autocomplete = "off" })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Pincode</label>
                                @Html.TextBoxFor(model => model.PinCode, new { @class = "form-control", @placeholder = "Pincode", @required = "required", @autocomplete = "off", @onkeypress = "return isNumber(event);", @maxlength = "6" })
                                @Html.ValidationMessageFor(model => model.PinCode, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>User Name</label>
                                @Html.TextBoxFor(model => model.Username, new { @class = "form-control ", @placeholder = "User Name", @maxlength = "50", @required = "required", @autocomplete = "off" })
                                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="row">
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Password</label>
                                        @Html.TextBoxFor(model => model.Password, new { @class = "form-control", @placeholder = "Password", @maxlength = "15", @minlength = "8", @required = "required", @autocomplete = "off" })
                                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Aadhaar Number </label>
                                        @Html.TextBoxFor(model => model.AdharNumber, new { @class = "form-control ", @placeholder = "Aadhaar Number", @maxlength = "12", @autocomplete = "off", @onkeypress = "return isNumber(event);" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>PAN Number </label>
                                        @Html.TextBoxFor(model => model.PanNumber, new { @class = "form-control", @placeholder = "PANNumber", @autocomplete = "off", @maxlength = "10" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label></label>
                                        <div class="col-sm-10">
                                            <label style="margin-top:20px;">
                                                @Html.CheckBoxFor(model => model.IsActive, htmlAttributes: new { @checked = true })
                                                Is Active
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <h4 class="card-title"><b>Document Upload</b></h4><br />
                    <div class="row">
                        <div class="col-md-12">
                            <table id="tbldynamic" class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th style="text-align:center;">Document Type</th>
                                        <th style="text-align:center;">Document Number</th>
                                        <th style="text-align:center;">Upload Document</th>
                                        <th style="text-align:center;">Expiry Date</th>
                                        <th style="text-align:center;">Preview</th>
                                        <th>

                                        </th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @if (Model != null)
                                    {

                                        if (Model.userDocs.Count() > 0)
                                        {
                                            int j = 0;
                                            foreach (var i in Model.userDocs)
                                            {
                                    <tr>
                                        <td>
                                            @*@Html.HiddenFor(a => a.userDocs[j].DocumentType, new { @class = "hdn_doctype", @id = "[" + j + "].hdn_doctype" })*@
                                            @Html.DropDownListFor(a => a.userDocs[j].DocumentType, (SelectList)ViewBag.DocTypes, "-Select Document Type-", new { @class = "form-control clsdoctype", @id = "[" + j + "].doctype", @onchange = "doctype_changed(this);", @required = "required" })
                                            @Html.ValidationMessageFor(a => a.userDocs[j].DocumentType, "", new { @class = "text-danger clsdoctypeinvalid" })
                                        </td>

                                        <td>
                                            @Html.TextBoxFor(a => a.userDocs[j].DocumentNumber, null, new { @class = "form-control clsdocname", @id = "[" + j + "].docname", @required = "required" })
                                            @Html.ValidationMessageFor(a => a.userDocs[j].DocumentNumber, "", new { @class = "text-danger clsdocnameinvalid" })
                                        </td>

                                        <td>
                                            @Html.TextBoxFor(a => a.userDocs[j].DocFile, null, new
                                            {
                                                @class = "form-control clsdocfile",
                                                @id = "[" + j + "].docfile",
                                                @type = "file",
                                                @required = "required",
                                           @onchange = "return check_extension(this);document.getElementById('[" + j + "].preview').src = window.URL.createObjectURL(this.files[0])"
                                            })
                                            @Html.ValidationMessageFor(a => a.userDocs[j].DocFile, "", new { @class = "text-danger clsdocfileinvalid" })
                                        </td>

                                        @*@onchange="document.getElementById('["+ j +"].preview').src = window.URL.createObjectURL(this.files[0])"*@
                                        <td>
                                            @Html.TextBoxFor(a => a.userDocs[j].ExpiryDate, null, new { @class = "form-control dated clsexpirydate", @id = "[" + j + "].ExpiryDate" })
                                        </td>
                                        
                                        <td>
                                            <img id='[@j].preview' class="clsimagepreview" height="50" width="50" />
                                        </td>
                                        <td>@*<button type="button" id="btndelete" name="btndelete" onclick="btndeleterow(this);" class="ti-trash btn btn-danger btn-sm" />*@</td>
                                    </tr>
                                                j++;
                                            }
                                        }
                                    }
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td><input type="button" id="btnAddRow" name="addrow" value="Add New Row" onclick="btnaddnewrow();" class="btn btn-sm btn-info pull-right"></td>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                    <h4 class="card-title" style="margin:10px 0 0 0;"><b>Area of Service</b></h4><br /><br />
                    <div class="row">
                        <div class="col-md-3">
                            <div class="form-group">
                                <label>State</label>
                                <div class="input-group">
                                    @Html.DropDownListFor(model => model.StateList, (SelectList)ViewBag.StateList, new { @class = "form-control listbox", @autocomplete = "off", onchange = "AStateChanged()", @multiple = "multiple" })
                                    @Html.Hidden("hfStateSelected")
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label>District</label>
                                <div class="input-group">
                                    @Html.DropDownListFor(model => model.DistrictList, Enumerable.Empty<SelectListItem>(), new { @class = "form-control listbox", @autocomplete = "off", onchange = "ADistrictChanged()", @multiple = "multiple" })
                                    @Html.Hidden("hfDistrictSelected")
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label>City</label>
                                <div class="input-group">
                                    @Html.DropDownListFor(model => model.CityList, Enumerable.Empty<SelectListItem>(), new { @class = "form-control listbox", @autocomplete = "off", onchange = "ACityChanged()", @multiple = "multiple" })
                                    @Html.Hidden("hfCitySelected")
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label>Area </label>
                                <div class="input-group">
                                    @Html.DropDownListFor(model => model.AreaList, Enumerable.Empty<SelectListItem>(), new { @class = "form-control listbox", @autocomplete = "off", onchange = "AreaChanged()", @multiple = "multiple" })
                                    @Html.Hidden("hfAreaSelected")
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="dvCustomerList">

                    </div>
                    <div class="text-center">
                        <button type="submit" class="btn btn-primary ">Save</button>
                    </div>
                </div>
            </div>
        </div>
    </section>
}
@section scripts{
    <script>
        $.validator.unobtrusive.parse(document);
    </script>
}