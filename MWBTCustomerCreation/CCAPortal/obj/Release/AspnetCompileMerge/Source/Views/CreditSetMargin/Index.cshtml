@model WBT.DLCustomerCreation.Margins


@{
    ViewBag.Title = "Credit Type Offer Set Margin";
}

@using (Ajax.BeginForm("InsertData", "CreditSetMargin", null, new AjaxOptions
{
    OnSuccess = "onPromoSuccess_Ajax",
    ////OnFailure = "onFailure_Ajax",
    HttpMethod = "post",
    LoadingElementId = "progress"
}, new { @class = "form-sample" }))
{

    
    <div class="row">
        <div class="col-12">
            <div class="card card-primary">
                <div class="card-header">
                    <h3 class="card-title">Credit Set Margin</h3>
                    <div class="card-tools">
                        <button type="button" class="btn btn-tool" data-card-widget="collapse">  <i class="fas fa-minus"></i> </button>
                        <button type="button" class="btn btn-tool" data-card-widget="remove"> <i class="fas fa-times"></i> </button>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-3">
                            <div class="form-group">
                                <label> State </label>
                                <div class="input-group">
                                    @Html.DropDownListFor(model => model.stateID, (SelectList)ViewBag.StateList, "Select", new { @class = "form-control dropdown listbox" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label> District </label>
                                <div class="input-group">
                                    @Html.DropDownListFor(model => model.districtID, (SelectList)ViewBag.DistrictList, "Select", new { @class = "form-control dropdown listbox" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label> City </label>
                                <div class="input-group">
                                    @Html.DropDownListFor(model => model.CityID, (SelectList)ViewBag.CityList, "Select", new { @class = "form-control dropdown listbox" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label>Branch</label>
                                <div class="input-group">
                                    @Html.DropDownListFor(a => a.BranchID, (SelectList)ViewBag.BranchList, "Select", new { @class = "form-control listbox" })
                                </div>
                                @Html.ValidationMessageFor(model => model.BranchID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-3">
                            <div class="form-group">
                                <label>Credit Type </label>
                                <div>
                                    @Html.HiddenFor(model => model.CreditTypeID)
                                    @Html.TextBoxFor(model => model.CreditTypeName, new { @readonly = "readonly", @class = "form-control" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label> Margin in % </label>
                                <div>
                                    @Html.TextBoxFor(model => model.Margin, new { @class = "form-control" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label> Margin After this Period </label>
                                <div>
                                    @Html.TextBoxFor(model => model.NextMargin, new { @class = "form-control" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label> Credit Days </label>
                                <div>
                                    @Html.TextBoxFor(model => model.CreditDays, new { @class = "form-control" })
                                </div>
                            </div>
                        </div>

                    </div>

                    <div class="row">
                        <div class="col-md-3">
                            <div class="form-group">
                                <label> From Effective Date </label>
                                <div>

                                    @Html.TextBoxFor(model => model.FrmEffectiveDate, new { @class = "form-control dates" })

                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label> From Effective time </label>
                                <div>
                                    @Html.TextBoxFor(model => model.FrmEffectiveTime, new { @class = "form-control timepicker", @id = "input_starttime" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label>To Effective Date </label>
                                <div>
                                    @Html.TextBoxFor(model => model.ToEffectiveDate, new { @class = "form-control dates" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label>To Effective Time </label>
                                <div>
                                    @Html.TextBoxFor(model => model.ToEffectiveTime, new { @class = "form-control timepicker" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="card-footer">
                    <div class="text-center">
                        <button type="submit" class="btn btn-primary" id="btnUpdate">Save</button>
                    </div>
                </div>

            </div>
        </div>
    </div>
}








<div class="row">
    <div class="col-12 grid-margin">
        <div id="divList">
            @Html.Action("PreviousCreditTypeList")
        </div>
    </div>
</div>






<div id="progress" class="modal">
    <div class="center" style="margin: 0px; padding: 0px; position: fixed; right: 0px; top: 0px; width: 100%; height: 100%; background-color: rgb(102, 102, 102); z-index: 30001; opacity: 0.8;">
        <p style="position: absolute; color: White; top: 50%; left: 45%;">
            Loading, please wait... <img src="~/images/loading.gif" height="100" width="100" />
        </p>
    </div>
</div>

@section scripts {

    <script>
        function onPromoSuccess_Ajax() {
            Swal.fire({
                title: 'Success!!',
                text: 'Successfully',
                icon: 'success',
            }).then((result) => { });
        }

        function onSuccess_Ajax() {
        }
        function onCompleteCreate_Ajax() {
        }
        function onCreateSuccess_Ajax() {
        }
        function onEditSuccess_Ajax() {
        }
        function onEditSuccess() {

        }
        function onBegin_Ajax(data) {
        }
        function onEditCompleteCreate_Ajax() {
        }
        function onFailure_Ajax() {
            Swal.fire({
                title: 'Error',
                text: "Please try again later",
                icon: 'error',
            }).then((result) => { });
        }
        function Ajax_Edit_Failure() {
        }
        function Ajax_OnComplete() {
        }
        function onSaveCompleteCreate_Ajax() {
        }

        $(document).ready(function () {

            // Time Picker Initialization
            $('#input_starttime').pickatime({});
        });
        $(".dates").datepicker({
            changeMonth: true,
            changeYear: true,
            dateFormat: 'dd/mm/yy'
        });
    </script>
}
