@model WBT.DLCustomerCreation.UCMappings

@{
    ViewBag.Title = "Marketing / Channel Partner Mapping";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Ajax.BeginForm("Save", "UCMappings", null, new AjaxOptions
{
    OnSuccess = "onSuccess_Ajax",
    HttpMethod = "post",
    LoadingElementId = "progress"
}, new { @class = "form-sample" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="row">
        <!-- left column -->
        <div class="col-md-12">
            @*<!-- general form elements -->*@
            <div class="card card-primary">
                <div class="card-header">
                    <h3 class="card-title">Marketing / Channel Partner Mapping</h3>
                    <div class="card-tools">
                        <button type="button" class="btn btn-tool" data-card-widget="collapse">
                            <i class="fas fa-minus"></i>
                        </button>
                        <button type="button" class="btn btn-tool" data-card-widget="remove">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                </div>
                <!-- /.card-header -->
                <!-- form start -->
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-3">
                            <div class="form-group">
                                <label>Marketing / Channel Partner Type</label>
                                <div class="input-group">
                                    @Html.DropDownListFor(model => model.UserType, (SelectList)ViewBag.UserTypes, new { @class = "form-control listbox", @onchange = "UserTypeChanged()" })
                                </div>
                                @Html.ValidationMessageFor(model => model.UserType, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label>Marketing / Channel partners</label>
                                <div class="input-group">
                                    @Html.DropDownListFor(model => model.ID, (SelectList)ViewBag.UserList, new { @class = "form-control listbox", @onchange = "UserChanged()" })
                                </div>
                                @Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <label style="margin-top:40px;">
                                @Html.CheckBoxFor(model => model.IsSwapping) Swap
                            </label>
                        </div>
                        <div class="col-md-3" id="SwapRow" style="display:none;">
                            <label>Swap To</label>
                            <div class="input-group">
                                @Html.DropDownListFor(model => model.SwapID, Enumerable.Empty<SelectListItem>(), new { @class = "form-control listbox", @required = "required" })
                            </div>
                            @Html.ValidationMessageFor(model => model.SwapID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="clearfix" style="clear:both;"></div>
                    <div class="row">
                        <div class="col-md-12">
                            <div id="dvList">

                            </div>
                        </div>
                    </div>
                    <div class="clearfix"></div>
                    <br />
                </div>
                <div class="card-footer">
                    <div class="text-center">
                        <button type="submit" class="btn btn-primary" id="btnSave">Save</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<div id="progress" class="modal">
    <div class="center" style="margin: 0px; padding: 0px; position: fixed; right: 0px; top: 0px; width: 100%; height: 100%; background-color: rgb(102, 102, 102); z-index: 30001; opacity: 0.8;">
        <p style="position: absolute; color: White; top: 50%; left: 45%;">
            Loading, please wait... <img src="~/images/loading.gif" height="100" width="100" />
        </p>
    </div>
</div>

@section scripts {

    <script>
        function onSuccess_Ajax(data) {

        if (data == "success") {
            Swal.fire({
            title: "Success",
            text: "Marketing / Channel Partner mappings saved Successfully!",
            icon: "success"
        }).then(function () {
            $("#progress").show();
            window.location = '@Url.Action("Index", "UCMappings")';

        });
        }
        else if (data == "error") {

            Swal.fire({
            title: "Error",
            text: "Please contact administrator",
            icon: "error"
            }).then(function () {
                $("#progress").hide();
                 window.location = '@Url.Action("Index", "UCMappings")';
                LoadListBox();
        });
        }
        else if (data == "sessionexpired") {
            Swal.fire({
                title: "Error",
                text: "Your session expired.. please click OK to login again",
                icon: "warning"
            }).then(function () {
                $("#progress").show();
                window.location = '@Url.Action("Index", "Login")';

            });
        }
        LoadListBox();
    }
    function UserTypeChanged() {
        var UserType = $('#UserType').val();
        $("#progress").show();

        $.ajax({
            type: 'POST',
            url: '@Url.Action("UserTypeChanged", "UCMappings")',
            dataType: "json",
            data: { UserType: UserType },
            success: function (response) {
                data = [];
                array = { label: 'Select', value: '' };
                data.push(array);
                for (var i = 0; i < response.length; i++) {
                    array = { label: response[i].text, value: response[i].value };
                    data.push(array);
                }
                jQuery("#ID").multiselect('dataprovider', data);
                jQuery("#ID").multiselect('rebuild');
                $("#progress").hide();


            },
            error: function () {
                $("#progress").hide();
            }
        });
    }
    function LoadListBox() {
        $('.listbox').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            maxHeight: 450,
        });
    }
    function UserChanged() {
        var ID = jQuery('#ID').val();
        var UserType = $('#UserType').val();
        $("#progress").show();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("UserChanged", "UCMappings")',
            dataType: "HTML",
            data: { UserType: UserType, ID: ID },
            success: function (response) {

                //alert('hererer');

                jQuery("#dvList").html('');
                jQuery("#dvList").html(response);
                loadTable();

                //alert('After');

                LoadSwapUsers(ID, UserType);
                $("#progress").hide();
            },
            error: function () {
            }
        });
    }
    function LoadSwapUsers(ID, UserType) {
        $.ajax({
            type: 'POST',
            url: '@Url.Action("LoadSwapUsers", "UCMappings")',
            dataType: "json",
            data: { UserType: UserType, ID: ID },
            success: function (response) {
                data = [];
                array = { label: 'Select', value: '' };
                data.push(array);
                for (var i = 0; i < response.length; i++) {
                    array = { label: response[i].text, value: response[i].value };
                    data.push(array);
                }
                jQuery("#SwapID").multiselect('dataprovider', data);
                jQuery("#SwapID").multiselect('rebuild');
            },
            error: function () {
            }
        });
    }
    </script>
    <script>
        function loadTable() {
            var table = jQuery('.dataGrid').DataTable({
                //dom: 'Bfrtip',
                "pageLength": 5,
            });

            //alert('L1');

            $('#select_all').click(function () {
                //var c = this.checked;
                //$('.chkselect').prop('checked', c)
                $(':checkbox', table.rows().nodes()).prop('checked', this.checked);
            });

            if ($(".chkselect").length == $(".chkselect:checked").length) {
                $("#select_all").prop('checked', true);
            }

            $(".chkselect").click(function () {
                if (!this.checked) {
                    $("#select_all").prop('checked', false);
                }
                else if ($(".chkselect").length == $(".chkselect:checked").length) {
                    $("#select_all").prop('checked', true);
                }
            });

            // Handle form submission event
            $('.form-sample').on('submit', function (e) {
                var form = this;

                // Encode a set of form elements from all pages as an array of names and values
                var params = table.$('input,select,textarea').serializeArray();

                // Iterate over all form elements
                $.each(params, function () {
                    // If element doesn't exist in DOM
                    if (!$.contains(document, form[this.name])) {
                        // Create a hidden element
                        $(form).append(
                            $('<input>')
                                .attr('type', 'hidden')
                                .attr('name', this.name)
                                .val(this.value)
                        );
                    }
                });
            });
        }
    </script>
    <script>
        jQuery(document).ready(function () {
            $('#IsSwapping').change(function () {
                $('#SwapRow').toggle($(this).prop('checked'));
                //$('#SwapRow').addClass("col-md-3 animate__animated animate__flash");
            });
        });
    </script>


    <script>
        //jQuery(document).ready(function ($) {
        //    jQuery("#dataGrid").DataTable({
        //        "responsive": true, "lengthChange": false, "autoWidth": false,
        //        "buttons": ["copy", "csv", "excel", "pdf", "print", "colvis"],
        //    }).buttons().container().appendTo('#dataGrid_wrapper .col-md-6:eq(0)');
        //});

        jQuery(document).ready(function ($) {
            jQuery("#dataGrid").DataTable({
                "responsive": true, "lengthChange": false, "autoWidth": false,
                "buttons": [{ extend: "copy", className: "btn btn-secondary buttons-copy buttons-html5" }, { extend: "csv", className: "btn btn-secondary buttons-copy buttons-html5" }, { extend: "excel", className: "btn btn-secondary buttons-copy buttons-html5" }, { extend: "pdf", className: "btn btn-secondary buttons-copy buttons-html5" }, { extend: "print", className: "btn btn-secondary buttons-copy buttons-html5" }],
            }).buttons().container().appendTo('#dataGrid_wrapper .col-md-6:eq(0)');
        });
    </script>

}