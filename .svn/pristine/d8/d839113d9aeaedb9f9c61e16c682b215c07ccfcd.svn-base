@model IEnumerable<WBT.DLCustomerCreation.BranchDetails>
@{
    ViewBag.Title = "Branch";
}
<div class="main-panel" id="MainDiv">    
   <div id="divBranchCreate">  
        @Html.Action("BranchCreate")
   </div>
         
   <div id="divBranchList">     
       @Html.Action("BranchDisplayList")  
   </div>
</div>
<div id="progress" class="modal">
    <div class="center" style="margin: 0px; padding: 0px; position: fixed; right: 0px; top: 0px; width: 100%; height: 100%; background-color: rgb(102, 102, 102); z-index: 30001; opacity: 0.8;">
        <p style="position: absolute; color: White; top: 45%; left: 45%;">
            <span>Loading, Please wait...</span> <img src="~/images/loading.gif" height="100" width="100" />
        </p>
    </div>
</div>

@section scripts {
    <script>
    function onCreateSuccess_Ajax() {

        Swal.fire({
            title: "Success",
            text: "Branch Saved Successfully",
            icon: "success"
        }).then(function () {
            $("#progress").show();
            window.location = '@Url.Action("Index", "BranchCreation")';
        });
    }
    function onEditSuccess_Ajax() {
            Swal.fire({
            title: "Success",
            text: "Branch Updated Successfully",
            icon: "success"
        }).then(function () {
            $("#progress").show();
            window.location = '@Url.Action("Index", "BranchCreation")';
        });
    }
    function onBegin_Ajax(data) {
    }
    function onEditBegin_Ajax(data) {
    }
    function onFailure_Ajax() {
        Swal.fire({
            title: "Error",
            text: "Please try again  later",
            icon: "error"
        }).then(function () {
        });
        //swal("Error", "Please try again  later", "error");
    }
    function Ajax_Edit_Failure(xhr, statusDescription) {
        //swal(xhr.statusDescription);
        Swal.fire({
            title: "Error",
            text: xhr.statusDescription,
            icon: "error"
        }).then(function () {
        });
    }
    function onEditCompleteCreate_Ajax() {
    }
    function Ajax_OnComplete() {
    }
    function onSaveCompleteCreate_Ajax() {
    }
    function onEditSuccess() {
        var elmnt = document.getElementById("MainDiv");
        elmnt.scrollIntoView();
        LoadListBox();
        loadCities();
        ShowHideParentChannel();
        $("#Name").focus();
        }
    function onDeleteSuccess(data) {
            if (data.url) {
                window.location = '@Url.Action("Index", "Login")';
            }
            Swal.fire({
                text: data,
            }).then((result) => {
                $("#divBranchList").load('@Url.Action("BranchDisplayList", "BranchCreation")');
                setTimeout(function () {
                    $("#dataGrid").dataTable().fnDestroy();
                    loadDataTableWithButtons();
                }, 1000);
            });
        }
    </script>
    <script>
    function btnCancel_Click() {
        $('#divBranchCreate').load('@Url.Action("BranchCreate", "BranchCreation")');
        loadCities();
        LoadListBox();
    }
    </script>
    <script type="text/javascript">
        function checkboxchecked() {
            if ($("#IsSame").is(":checked")) {
                var city = document.getElementById('City').value;
                var billingAddress = document.getElementById('BillingAddress').value;
                var billingLandmark = document.getElementById('BillingLandmark').value;
                var state = $("#State").val();
                var pinCode = document.getElementById('PinCode').value;
                document.getElementById("ShippingCity").value = city;
                document.getElementById('ShippingAddress').value = billingAddress;
                document.getElementById('ShippinLandmark').value = billingLandmark;
                $("#ShippingState").multiselect('select', state);
                document.getElementById("ShippingPinCode").value = pinCode;
            } else {
                document.getElementById("ShippingCity").value = '';
                document.getElementById('ShippingAddress').value = '';
                document.getElementById('ShippinLandmark').value = '';
                $('option', $('#ShippingState')).each(function (element) {
                    $(this).removeAttr('selected').prop('selected', false);
                });
                $("#ShippingState").multiselect('refresh');
                document.getElementById("ShippingPinCode").value = '';
            }
        }
    </script>
    <script>
    function StateChanged() {
        //$("#progress").show();
        //$("#progress").html("Loading Cities.. Please wait");
        var selectedStateId = $('#BranchState').val();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("AssigningCities", "BranchCreation")',
            dataType: "json",
            data: { StateID: selectedStateId },
            success: function (data) {
                if (data != null && data != "") {

                    var s = '<option value="-1">Please Select City</option>';
                    for (var i = 0; i < data.length; i++) {
                        s += '<option value="' + data[i].CityID + '">' + data[i].CityName + '</option>';

                       // alert(data[i].CityName);
                    }
                    $("#BranchCity").html(s);
                    //$("#progress").hide();
                    //$("#progress").html("Loading, Please wait...");
                } else {
                    //$("#progress").hide();
                    //$("#progress").html("Loading, Please wait...");
                }
            },
            error: function () {
                //$("#progress").hide();
                //$("#progress").html("Loading, Please wait...");
            }
        });
    }
    function ChannelTypeChanged() {
        var ChannelTypeID = $("#ChannelTypeID").val();
        if (ChannelTypeID == 1) {
            $("#STypedv").hide();
            $("#lblParentSC").hide();
        }
        else {
            //$("#STypedv").show();
            //$("#lblParentSC").show();
            $("#progress").show();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("ChannelTypeChanged", "BranchCreation")',
                dataType: "json",
                data: {ChannelTypeID: ChannelTypeID},
                success: function (response) {
                    var data = [];
                    data = response;
                    $("#AssociatedTo").multiselect('dataprovider', data);
                    $("#AssociatedTo").multiselect('rebuild');
                    $("#progress").hide();
                },
                error: function () {
                }
            });
        }
    }
    function ShowHideParentChannel() {
        var ParentChannelPartnerList = $("#ParentChannelPartnerList").val();
        if (ParentChannelPartnerList != null && ParentChannelPartnerList != '') {
            $("#ParentDiv").show();
        }
        else {
            $("#ParentDiv").hide();
        }
    }
    function AssociateChanged() {
        var AssociateID = $("#AssociatedTo").val();
        if (AssociateID != null && AssociateID != "") {
            if (AssociateID == 1) {
                $("#ParentDiv").hide();
            }
            else {
                $('option', $('#ParentChannelPartnerList')).each(function(element) {
                    $(this).removeAttr('selected').prop('selected', false);
                  });
                $("#ParentChannelPartnerList").multiselect('refresh');
                $("#ParentDiv").show();
                $.ajax({
                type: 'POST',
                url: '@Url.Action("AssociateChanged", "BranchCreation")',
                dataType: "json",
                data: {AssociateID: AssociateID},
                success: function (response) {
                        var userData = [];
                        for (var i = 0; i < response.length; i++) {
                            array = { label: response[i].Name, value: response[i].BranchID };
                            userData.push(array);
                        }
                        $("#ParentChannelPartnerList").multiselect('dataprovider', userData);
                        $("#ParentChannelPartnerList").multiselect('rebuild');
                        $("#progress").hide();
                    },
                    error: function () {
                    }
                });
            }
        }
    }
    function LoadListBox() {
        $('.listbox').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            maxHeight: 450,
        });
        }

     function btnaddnewrow() {
        var rowCount = $('#tbldynamic tbody tr').length;
        var id = $('#tbldynamic tbody tr:last').find('.clsdocname').attr('id');
        var numb = id.match(/\d/g);
        numb = numb.join("");
        rowCount = Number(numb) + 1;

        AddRow(rowCount);
        return false;
    }

    function btndeleterow(element) {
        $(element).closest('tr').remove();

        $('#tbldynamic tbody tr').each(function (index, ele) {

            //overwriting name attribute to post to controller as the indexing must be in sequential manner
            var new_doctype = $('.clsdoctype', this).attr('name').replace(/[0-9]+/, index);
            $('.clsdoctype', this).attr('name', new_doctype);
            $('.clsdoctypeinvalid', this).attr('data-valmsg-for', new_doctype);
            //$('.hdnmachine_id', this).attr('name', new_doctype);

            var new_docnumber = $('.clsdocname', this).attr('name').replace(/[0-9]+/, index);
            $('.clsdocname', this).attr('name', new_docnumber);
            $('.clsdocnameinvalid', this).attr('data-valmsg-for', new_docnumber);
            //$('.clshdncontract_id', this).attr('name', new_docnumber);

            var new_docfile = $('.docfile', this).attr('name').replace(/[0-9]+/, index);
            $('.docfile', this).attr('name', new_docfile);
            $('.clsdocfileinvalid', this).attr('data-valmsg-for', new_docfile);

            $("form").data("unobtrusiveValidation", null);
            $("form").data("validator", null);
            $.validator.unobtrusive.parse($("form"));

        });
    }


    jQuery(document).ready(function(){
        loadCities();
        $("#ParentDiv").hide();

        $('#tbldynamic tbody tr').each(function (index, ele) {
            //if ($('.hdn_doctype', this).length > 0)
            //    var doctype = $('.hdn_doctype', this).val();
            ////$('.clsdoctype', this).val(doctype);
            //var doctypes = $('.clsdoctype', this);
            //doctype_changed(doctypes);
        });
    });

    var AddRow = function (rows) {
        var slno = parseInt(rows + 1);
        var i = parseInt(rows);
        var $row = $('<tr/>');

        //<input type="hidden" class="hdn_doctype" name=""  />

        //$row.append(' <td> '
        //    + '<select class="form-control clsdoctype" data-val="true"  data-val-required="Document Type Required" id="[' + i + '].doctype" name="userDocs[' + i + '].DocumentType" onchange="doctype_changed(this);" '
        //    + '><option value="">-Select Document Type-</option></select>'
        //    + '<span class="field-validation-valid text-danger clsdoctypeinvalid" data-valmsg-for="userDocs[' + i + '].doctype" data-valmsg-replace="true"></span> </td>');

        $row.append(' <td> <input type="hidden" class="hdn_docname"  /><input name="qrDocs[' + i + '].DocumentType" id="[' + i + '].DocumentType" type="text" class="form-control clsdocname" data-val="true" />'
            + '<span class="field-validation-valid text-danger clsdocnameinvalid" data-valmsg-for="qrDocs[' + i + '].DocumentType" data-valmsg-replace="true"></span> </td>');


        $row.append(' <td> <input type="hidden" class="hdn_docfile"  /><input name="qrDocs[' + i + '].DocFile" id="[' + i + '].docfile" type="file" class="form-control clsdocfile" data-val="true" />'
            + '<span class="field-validation-valid text-danger clsdocfileinvalid" data-valmsg-for="qrDocs[' + i + '].docfile" data-valmsg-replace="true"></span> </td>');

        //$row.append(' <td><input name="qrDocs[' + i + '].ExpiryDate" id="[' + i + '].expirydate" class="form-control dated clsdocfile" data-val="true" />'
        //    + ' </td>');

        $row.append(' <td> <input type="hidden" class="hdn_preview"  /><img id="[' + i + '].preview" class="clsimagepreview" height="50" width="50" />'
            + ' </td>');

        $row.append(' <td><button type="button" id="btndelete" name="btndelete" onclick="btndeleterow(this);"  class="btn btn-danger btn-sm" ><i class="fas fa-trash"></i></button></td>');

        $("#tbldynamic tbody tr:last").after($row);
        $("form").data("unobtrusiveValidation", null);
        $("form").data("validator", null);
        $.validator.unobtrusive.parse($("form"));
        $('.dated').datepicker({ dateFormat: "dd/mm/yy" });

        var docTypeID = "[" + i + "].doctype";

        //docTypeLoad(docTypeID);
        //doctype_changed(document.getElementById(docTypeID));
    }
    @*function docTypeLoad(docTypeID) {
        $(document.getElementById(docTypeID)).empty();
        $.ajax({
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            type: 'POST',
            url: '@Url.Action("DocTypeLoad", "BranchCreate")',
            success: function (data) {
                $(document.getElementById(docTypeID)).append('<option value="">-Select Document Type-</option>');
                $.each(data, function (index, value) {
                    $(document.getElementById(docTypeID)).append('<option value="' + value.Value + '">' + value.Text + '</option>');
                });
            },
            error: function (response) {
            }
        });
    }*@
    //function doctype_changed(element) {
    //    var docTypeID= $(element).val();

    //    var prodcnt = document.getElementsByClassName('clsdoctype');
    //    var index = $(element).closest('tr').index();
    //    for (var i = 0; i < prodcnt.length; i++) {

    //        var rwind = $(prodcnt[i]).closest('tr').index();
    //        if (index != rwind) {
    //            if ($(element).val() == prodcnt[i].value) {
    //                $(element).val('');
    //                $(element).closest('tr').find('input.hdn_doctype').val($(element).val());
    //                //swal("Document Type exists");

    //                 Swal.fire({
    //        title: "Error",
    //        text: "Document Type exists",
    //        icon: "error"
    //    }).then(function () {
    //    });

    //                prodcnt[i].focus();
    //                return;
    //            }
    //        }
    //    }
    //}
    function showPreview(event) {
        var output = document.getElementById('output');
    }
    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $(input).closest('tr').find('input.clsimagepreview').attr('src', e.target.result);
            }

            reader.readAsDataURL(input.files[0]);
        }
    }

    function loadCities() {

        jQuery("#BranchCity").select2({
            ajax: {
                url: '@Url.Action("SearchByName", "BranchCreation")',
                type: "post",
                dataType: 'json',
                delay: 250,
                data: function (params) {
                    return {
                        searchTerm: params.term // search term
                    };
                },
                processResults: function (response) {
                    return {
                        results: response
                    };
                },
                cache: true
            }
        });
    }
    </script>
    <script>
        //$(document).ready(function () {
        //    $("#dataGrid").DataTable({
        //        "responsive": true, "lengthChange": false, "autoWidth": false,
        //        "buttons": ["copy", "csv", "excel", "pdf", "print", "colvis"]
        //    }).buttons().container().appendTo('#dataGrid_wrapper .col-md-6:eq(0)');
        //});


        $(document).ready(function ($) {
            $("#dataGrid").DataTable({
                "responsive": true, "lengthChange": false, "autoWidth": false,
                "buttons": [{ extend: "copy", className: "btn btn-secondary buttons-copy buttons-html5" }, { extend: "csv", className: "btn btn-secondary buttons-copy buttons-html5" }, { extend: "excel", className: "btn btn-secondary buttons-copy buttons-html5" }, { extend: "pdf", className: "btn btn-secondary buttons-copy buttons-html5" },  { extend: "print", className: "btn btn-secondary buttons-copy buttons-html5" }]  
            }).buttons().container().appendTo('#dataGrid_wrapper .col-md-6:eq(0)');
        });         /*, { extend: "colvis", className: "btn btn-secondary buttons-collection dropdown-toggle buttons-colvis" }*/
    </script>
}